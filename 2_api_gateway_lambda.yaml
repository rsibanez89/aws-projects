---
Resources:
  PlainLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !ImportValue Rsibanez89Bucket
        S3Key: >-
          api-gateway-lambda.zip
      FunctionName: api-gateway-lambda
      Handler: 'ApiGatewayLambda::ApiGatewayLambda.ApiGatewayHandler::Handle'
      MemorySize: 1024
      Runtime: dotnetcore2.1
      Timeout: 6
      Role: !GetAtt
        - ApiGatewayLambdaRole
        - Arn

  ApiGatewayLambdaRole: 
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "ApiGatewayLambdaRole"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies: 
        - PolicyName: "ApiGatewayLambdaPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: "*"
                Resource: "*"
      Path: /

  ApiGatewayLambdaRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: api-gateway-lambda
  
  ApiGatewayLambdaMethodGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: GET
      RequestParameters: {}
      ResourceId: !GetAtt ApiGatewayLambdaRestApi.RootResourceId
      RestApiId: !Ref ApiGatewayLambdaRestApi
      ApiKeyRequired: false
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: GET
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlainLambdaFunction.Arn}/invocations
      MethodResponses: []